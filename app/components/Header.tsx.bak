"use client";

import { useState, useEffect } from "react";
import Link from "next/link";
import { usePathname } from "next/navigation";
import { Menu, X } from "lucide-react";
import { useLanguage } from "../contexts/language-context";
import LanguageSwitcher from "./LanguageSwitcher";
import {
  NavigationMenu,
  NavigationMenuItem,
  NavigationMenuList,
  NavigationMenuLink,
  navigationMenuTriggerStyle,
} from "@/components/ui/navigation-menu";
import {
  Sheet,
  SheetContent,
  SheetDescription,
  SheetHeader,
  SheetTitle,
  SheetTrigger,
} from "@/components/ui/sheet";
import { Button } from "@/components/ui/button";

export default function Header() {
  const [scrolled, setScrolled] = useState(false);
  const pathname = usePathname();
  const isHomePage = pathname === "/";
  const { t } = useLanguage();

  useEffect(() => {
    const handleScroll = () => {
      setScrolled(window.scrollY > 20);
    };

    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  const NavigationItems = () => (
    <>
      {isHomePage ? (
        <>
          <NavigationMenuItem>
            <NavigationMenuLink
              href="#services"
              className={navigationMenuTriggerStyle()}
            >
              {t("nav.services")}
            </NavigationMenuLink>
          </NavigationMenuItem>
          <NavigationMenuItem>
            <NavigationMenuLink
              href="#portfolio"
              className={navigationMenuTriggerStyle()}
            >
              {t("nav.work")}
            </NavigationMenuLink>
          </NavigationMenuItem>
          <NavigationMenuItem>
            <NavigationMenuLink
              href="#testimonials"
              className={navigationMenuTriggerStyle()}
            >
              {t("nav.clients")}
            </NavigationMenuLink>
          </NavigationMenuItem>
          <NavigationMenuItem>
            <NavigationMenuLink
              href="#contact"
              className={navigationMenuTriggerStyle()}
            >
              {t("nav.contact")}
            </NavigationMenuLink>
          </NavigationMenuItem>
        </>
      ) : (
        <NavigationMenuItem>
          <NavigationMenuLink asChild className={navigationMenuTriggerStyle()}>
            <Link href="/">{t("nav.home")}</Link>
          </NavigationMenuLink>
        </NavigationMenuItem>
      )}
    </>
  );

  const MobileNavigationItems = () => (
    <div className="flex flex-col space-y-4">
      {isHomePage ? (
        <>
          <Link
            href="#services"
            className="text-neutral-600 hover:text-neutral-900 transition-colors text-lg font-medium"
          >
            {t("nav.services")}
          </Link>
          <Link
            href="#portfolio"
            className="text-neutral-600 hover:text-neutral-900 transition-colors text-lg font-medium"
          >
            {t("nav.work")}
          </Link>
          <Link
            href="#testimonials"
            className="text-neutral-600 hover:text-neutral-900 transition-colors text-lg font-medium"
          >
            {t("nav.clients")}
          </Link>
          <Link
            href="#contact"
            className="text-neutral-600 hover:text-neutral-900 transition-colors text-lg font-medium"
          >
            {t("nav.contact")}
          </Link>
        </>
      ) : (
        <Link
          href="/"
          className="text-neutral-600 hover:text-neutral-900 transition-colors text-lg font-medium"
        >
          {t("nav.home")}
        </Link>
      )}
    </div>
  );

  return (
    <header
      className={`fixed w-full top-0 z-50 transition-all duration-300 ${
        scrolled
          ? "bg-white/95 backdrop-blur-sm shadow-sm py-3"
          : "bg-transparent py-6"
      }`}
    >
      <nav className="container mx-auto px-6">
        <div className="flex justify-between items-center">
          {/* Logo */}
          <Link href="/" className="flex items-center space-x-2">
            <span className="text-xl font-bold tracking-tight">
              <span className="gradient-text">ngc</span>
            </span>
          </Link>

          {/* Desktop Navigation */}
          <div className="hidden md:flex items-center space-x-6">
            <NavigationMenu>
              <NavigationMenuList>
                <NavigationItems />
              </NavigationMenuList>
            </NavigationMenu>

            <Button asChild size="sm" className="ml-4">
              <Link href="/initialize-project">{t("nav.startProject")}</Link>
            </Button>

            <LanguageSwitcher />
          </div>

          {/* Mobile Navigation */}
          <div className="md:hidden flex items-center space-x-4">
            <LanguageSwitcher />
            <Sheet>
              <SheetTrigger asChild>
                <button
                  className="p-2 text-neutral-700 hover:text-neutral-900 focus:outline-none focus:ring-2 focus:ring-neutral-500 rounded-md transition-colors"
                  aria-label="Open menu"
                >
                  <Menu className="h-6 w-6" />
                </button>
              </SheetTrigger>
              <SheetContent side="right" className="w-80">
                <SheetHeader>
                  <SheetTitle className="text-left">
                    <span className="gradient-text">ngc</span>
                  </SheetTitle>
                  <SheetDescription className="text-left">
                    Navigation menu
                  </SheetDescription>
                </SheetHeader>
                <div className="mt-8 space-y-6">
                  <MobileNavigationItems />
                  <div className="pt-6 border-t">
                    <Button asChild className="w-full">
                      <Link href="/initialize-project">
                        {t("nav.startProject")}
                      </Link>
                    </Button>
                  </div>
                </div>
              </SheetContent>
            </Sheet>
          </div>
        </div>
      </nav>
    </header>
  );
}
